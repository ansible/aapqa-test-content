---
- name: Run downstream integration tests
  hosts: all
  gather_facts: "{{ facts_gathering|default(true) }}"
  vars:
    collection_path: /usr/share/ansible/collections/ansible_collections
    default_name_pattern: "{{ collection_name }}_*"
    target_name_pattern: "{{ target_name|default(lookup('vars', 'default_name_pattern')) }}"
    integration_tests_path: "{{ collection_path }}/{{ collection_namespace }}/{{ collection_name }}/tests/integration/targets"
    integration_path: "{{ collection_path }}/{{ collection_namespace }}/{{ collection_name }}/tests/integration"
    integration_tests_pattern: "{{ target_name_pattern }}"
    integration_target_failures: []

  tasks:
    - name: Find integration test targets
      ansible.builtin.find:
        file_type: directory
        paths: "{{ integration_tests_path }}"
        pattern: "{{ integration_tests_pattern }}"
        recurse: false
      register: _targets
      delegate_to: localhost

    - name: Format integration targets
      ansible.builtin.set_fact:
        _integration_targets: "{{ _targets.files | map(attribute='path') | list | sort }}"

    - name: Report missing integration targets
      ansible.builtin.fail:
        msg: "No integration targets found"
      when: _integration_targets | length == 0

    - name: Test targets found
      ansible.builtin.debug:
        msg: "{{ _integration_targets }}"

    - name: Check if runme.sh file exists in target directory
      ansible.builtin.stat:
        path: "{{ _integration_targets[0] }}/runme.sh"
      register: runme_file_status

    - name: Check if ansible_content_settings.yml file exists in integration directory
      ansible.builtin.stat:
        path: "{{ integration_path }}/ansible_content_settings.yml"
      register: ansible_content_settings_file_status

    - name: Run runme.sh to execute integration tests if runme.sh file exists at target
      ansible.builtin.command: >
        {{ _integration_targets[0] }}/runme.sh
        -e @{{ integration_path }}/ansible_content_settings.yml
      args:
        chdir: "{{ _integration_targets[0] }}"
      register: runme_result
      changed_when: runme_result.rc != 0
      when: runme_file_status.stat.exists and ansible_content_settings_file_status.stat.exists

    - name: Run integration tests
      ansible.builtin.include_role:
        name: run_integration_tests
        tasks_from: run_integration_tests
        apply:
          environment:
            ANSIBLE_DEBUG_BOTOCORE_LOGS: true
      with_items:
        - "{{ _integration_targets }}"
      when: not runme_file_status.stat.exists
